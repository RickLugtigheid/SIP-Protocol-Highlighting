{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SIP protocol",
	"scopeName": "source.sip",
	"patterns": [
		{
			"include": "#sip-uri"
		},
		{
			"include": "#methods"
		},
		{
			"include": "#headers"
		},
		{
			"include": "#body"
		},
		{
			"include": "#string"
		},
		{
			"include": "#numeric-literal"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"methods": {
			"patterns": [
				{
					"comment": "Protocol version",
					"begin": "SIP/",
					"beginCaptures": {
						"0": {
							"name": "keyword.operator.new.sip"
						}
					},
					"end": "$",
					"patterns": [
						{
							"begin": "(1|3)[0-9]{2}",
							"beginCaptures": {
								"0": {
									"name": "constant.numeric.decimal.sip"
								}
							},
							"end": "$",
							"patterns": [
								{
									"include": "#numeric-literal"
								},
								{
									"name": "constant.regexp.sip",
									"match": "[A-z]+"
								}
							]
						},
						{
							"begin": "2[0-9]{2}",
							"beginCaptures": {
								"0": {
									"name": "constant.numeric.decimal.sip"
								}
							},
							"end": "$",
							"patterns": [
								{
									"include": "#numeric-literal"
								},
								{
									"name": "comment.block.documentation.sip",
									"match": "[A-z]+"
								}
							]
						},
						{
							"begin": "[4-5][0-9]{2}",
							"beginCaptures": {
								"0": {
									"name": "constant.numeric.decimal.sip"
								}
							},
							"end": "$",
							"patterns": [
								{
									"include": "#numeric-literal"
								},
								{
									"name": "string.regexp",
									"match": "[A-z]+"
								}
							]
						},
						{
							"include": "#numeric-literal"
						}
					]
				},
				{
					"comment": "Request method",
					"name": "keyword.control.sip",
					"match": "(INVITE|ACK|CANCEL|OPTIONS|REGISTER|PRACK|SUBSCRIBE|NOTIFY|PUBLISH|INFO|REFER|MESSAGE|UPDATE|BYE)"
				}
			]
		},
		"headers": {
			"patterns": [
				{
					"begin": "([_a-zA-Z0-9\\-]+):",
					"end": "(.*)",
					"beginCaptures": {
						"0": {
							"name": "variable.sip"
						}
					},
					"endCaptures": {
						"0": {
							"name": "string.quoted.triple.sip",
							"patterns": [
								{
									"include": "#sip-uri"
								},
								{
									"include": "#string"
								}
							]
						}
					}
				}
			]
		},
		"body": {
			"patterns": [
				{
					"name": "markup.italic.sip",
					"match": "([A-z]+)=(.*)"
				}
			]
		},
		"sip-uri": {
			"patterns": [
				{
					"name": "markup.underline.link.sip",
					"match": "(sips?):([^@\\n]+)(?:@[^<>\\[\\]\\{\\}\\(\\)\\s]+)?",
					"captures": {
						"0": {
							"name": "constant.character.escape"
						}
					}
				}
			]
		},
		"string": {
			"name": "string.quoted.double.sip",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.sip",
					"match": "\\\\."
				}
			]
		},
		"numeric-literal": {
			"patterns": [
				{
					"name": "constant.numeric.hex.sip",
					"match": "\\b(?<!\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "storage.type.numeric.bigint.sip"
						}
					}
				},
				{
					"name": "constant.numeric.binary.sip",
					"match": "\\b(?<!\\$)0(?:b|B)[01][01_]*(n)?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "storage.type.numeric.bigint.sip"
						}
					}
				},
				{
					"name": "constant.numeric.octal.sip",
					"match": "\\b(?<!\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\b(?!\\$)",
					"captures": {
						"1": {
							"name": "storage.type.numeric.bigint.sip"
						}
					}
				},
				{
					"match": "(?x)\n(?<!\\$)(?:\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\b)| # 1.1E+3\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*(n)?\\b)|             # 1.E+3\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\b)|             # .1E+3\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\b)|                 # 1E+3\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*(n)?\\b)|                      # 1.1\n  (?:\\b[0-9][0-9_]*(\\.)(n)?\\B)|                                  # 1.\n  (?:\\B(\\.)[0-9][0-9_]*(n)?\\b)|                                  # .1\n  (?:\\b[0-9][0-9_]*(n)?\\b(?!\\.))                                 # 1\n)(?!\\$)",
					"captures": {
						"0": {
							"name": "constant.numeric.decimal.sip"
						},
						"1": {
							"name": "meta.delimiter.decimal.period.sip"
						},
						"2": {
							"name": "storage.type.numeric.bigint.sip"
						},
						"3": {
							"name": "meta.delimiter.decimal.period.sip"
						},
						"4": {
							"name": "storage.type.numeric.bigint.sip"
						},
						"5": {
							"name": "meta.delimiter.decimal.period.sip"
						},
						"6": {
							"name": "storage.type.numeric.bigint.sip"
						},
						"7": {
							"name": "storage.type.numeric.bigint.sip"
						},
						"8": {
							"name": "meta.delimiter.decimal.period.sip"
						},
						"9": {
							"name": "storage.type.numeric.bigint.sip"
						},
						"10": {
							"name": "meta.delimiter.decimal.period.sip"
						},
						"11": {
							"name": "storage.type.numeric.bigint.sip"
						},
						"12": {
							"name": "meta.delimiter.decimal.period.sip"
						},
						"13": {
							"name": "storage.type.numeric.bigint.sip"
						},
						"14": {
							"name": "storage.type.numeric.bigint.sip"
						}
					}
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line",
					"match": "--(.*)"
				},
				{
					"name": "comment.block",
					"begin": "<--",
					"end": "-->"
				}
			]
		}
	}
}